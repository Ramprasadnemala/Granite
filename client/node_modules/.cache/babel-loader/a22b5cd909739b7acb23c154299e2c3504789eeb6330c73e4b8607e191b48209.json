{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rampr\\\\OneDrive\\\\Desktop\\\\GraniteServices\\\\client\\\\src\\\\components\\\\headerSelection\\\\HeaderSelect.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './HeaderSelect.css'; // Import CSS file for styling\nimport PopupForm from './PopupForm/PopupForm';\nimport crean from '../../images/crean.jpeg';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HeaderSelect = () => {\n  _s();\n  const [showPopup, setShowPopup] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const togglePopup = () => {\n    setShowPopup(prevState => !prevState);\n  };\n  const handleLogout = () => {\n    // Perform logout action here, such as clearing session, resetting user state, etc.\n    // For this example, we will simply set loggedIn state to false.\n    setLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar2001\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-logo2001\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"./\",\n          style: {\n            color: '#fff',\n            textDecoration: \"none\",\n            cursor: \"pointer\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"granites-services\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), loggedIn ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"./\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login2001\",\n          onClick: handleLogout,\n          children: \"LogOut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login2001\",\n        onClick: togglePopup,\n        children: \"LogIn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), showPopup && /*#__PURE__*/_jsxDEV(PopupForm, {\n        loggedIn: loggedIn,\n        setLoggedIn: setLoggedIn,\n        onClose: togglePopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(HeaderSelect, \"RhkbRW2RKPxV1N0mGvFIsEWVBa8=\");\n_c = HeaderSelect;\nexport default HeaderSelect;\nvar _c;\n$RefreshReg$(_c, \"HeaderSelect\");","map":{"version":3,"names":["React","useState","PopupForm","crean","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","HeaderSelect","_s","showPopup","setShowPopup","loggedIn","setLoggedIn","togglePopup","prevState","handleLogout","children","className","to","style","color","textDecoration","cursor","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onClose","_c","$RefreshReg$"],"sources":["C:/Users/rampr/OneDrive/Desktop/GraniteServices/client/src/components/headerSelection/HeaderSelect.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './HeaderSelect.css'; // Import CSS file for styling\r\nimport PopupForm from './PopupForm/PopupForm';\r\nimport crean from '../../images/crean.jpeg'\r\nimport { Link } from 'react-router-dom';\r\nconst HeaderSelect = () => {\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n    const togglePopup = () => {\r\n        setShowPopup(prevState => !prevState);\r\n    };\r\n    const handleLogout = () => {\r\n        // Perform logout action here, such as clearing session, resetting user state, etc.\r\n        // For this example, we will simply set loggedIn state to false.\r\n        setLoggedIn(false);\r\n    };\r\n    return (\r\n        <>\r\n            <nav className=\"navbar2001\">\r\n                <div className=\"nav-logo2001\">\r\n                    {/* <span><img src={crean} alt='crean' style={{ height: \"50px\", width: \"70px\", borderRadius: \"10px\" }} /></span> */}\r\n                    <Link to=\"./\" style={{ color: '#fff',textDecoration:\"none\",cursor:\"pointer\" }}>\r\n                    <span className=\"granites-services\"></span>\r\n                    </Link>\r\n                </div>\r\n               \r\n                {loggedIn ? (\r\n                    <Link to=\"./\">\r\n                    <button className='login2001' onClick={handleLogout}>LogOut</button>\r\n                    </Link>\r\n                ) : (\r\n                    <button className='login2001' onClick={togglePopup}>LogIn</button>\r\n                )}\r\n                {showPopup && <PopupForm loggedIn={loggedIn} setLoggedIn={setLoggedIn} onClose={togglePopup} />}\r\n            </nav>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HeaderSelect;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB,CAAC,CAAC;AAC7B,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACxC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACtBH,YAAY,CAACI,SAAS,IAAI,CAACA,SAAS,CAAC;EACzC,CAAC;EACD,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB;IACA;IACAH,WAAW,CAAC,KAAK,CAAC;EACtB,CAAC;EACD,oBACIR,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACIZ,OAAA;MAAKa,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACvBZ,OAAA;QAAKa,SAAS,EAAC,cAAc;QAAAD,QAAA,eAEzBZ,OAAA,CAACF,IAAI;UAACgB,EAAE,EAAC,IAAI;UAACC,KAAK,EAAE;YAAEC,KAAK,EAAE,MAAM;YAACC,cAAc,EAAC,MAAM;YAACC,MAAM,EAAC;UAAU,CAAE;UAAAN,QAAA,eAC9EZ,OAAA;YAAMa,SAAS,EAAC;UAAmB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAELf,QAAQ,gBACLP,OAAA,CAACF,IAAI;QAACgB,EAAE,EAAC,IAAI;QAAAF,QAAA,eACbZ,OAAA;UAAQa,SAAS,EAAC,WAAW;UAACU,OAAO,EAAEZ,YAAa;UAAAC,QAAA,EAAC;QAAM;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC,gBAEPtB,OAAA;QAAQa,SAAS,EAAC,WAAW;QAACU,OAAO,EAAEd,WAAY;QAAAG,QAAA,EAAC;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACpE,EACAjB,SAAS,iBAAIL,OAAA,CAACJ,SAAS;QAACW,QAAQ,EAAEA,QAAS;QAACC,WAAW,EAAEA,WAAY;QAACgB,OAAO,EAAEf;MAAY;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9F;EAAC,gBAER,CAAC;AAEX,CAAC;AAAAlB,EAAA,CAlCKD,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAoClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}